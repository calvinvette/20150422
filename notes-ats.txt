HTML 1991 (from SGML)
	Simple, Forgiving
JavaScript - 1995
	Object-like language
	Interpreted Script Language
1998-9 HTML4, JS, CSS2 => Dynamic HTML

2001 - XML + HTML => XHTML
	XML Strict rules for HTML
	1 OoM better render performance
	Lint (Verify) XHTML conformance and tell browser

2004 - Apple (Konqueror => Webkit => Safari), Mozilla, Google (Webkit + Google Gears => Chrome), Opera
	Web Hypertext Application Technology Working Group (WHAT-WG)
	Adobe: SVG
	Apple: Dashboard, Canvas
	Google: Geolocation, WebDB (sqlite), localStorage
	Mozilla: IndexDB, XmlHttpRequest (XHR/AJAX)


	jQuery 
		- homogenize JS on browsers (cross-platform compatible JS)
		- Simplify syntax (but more esoteric/less code-readable)
		- Introduced CSS Query Selectors, implied for-each loops

var button = document.getElementById("myButton");
if (MSIE) {
	button.attachEvent("click", handlerFunction, true);
} else {
	button.addEventListener("click", handlerFunction, false);
}


Becomes =>

	$("myButton").click(handlerFunction);


2006 - Adobe donates JITC Engine (Tamarin) for Flash/ActionScript
	AS is EcmaScript, like JavaScript
	AS has Object-Oriented features: 
		Inheritance
		Typing
		Introspection
	JS performance >= 2-3 OoM better


2007 - Dojo - homogenize platform, reusable widget framework

~ 2009 - jQuery "wins" by popularity

~2011-2012 - Higher level frameworks built on top of jQuery
	BackboneJS (+UnderScore builds on jQuery)
		MVC
		Routes (page navigation)
		Events (above and beyond jQuery/JS)
		Single-Page Application (SPA)
	KnockoutJS
		Bi-directional Data Binding (M-V)
	=> Knockback

~2012	Angular (builds on jQuery)
		MVC/MVP/MVVM
		Routes
		Events
		SPA
		Bi-directional Data Binding
		Directives (declarative bindings, events, etc.)


	<input type="text" ng-model="customer.firstName" ng-blur="validateFirstName()">


	angular.controller("CustomerFormController", function($scope) {
		$scope.customer = new Customer();
		$scope.validateFirstName = function() {
			//console.log("validating first name - use the form API instead");
		};
	});


	http://todomvc.com

ECMAScript
	ES3 - JS as in IE5-8, NN, FF < 3 (HTML4)
	ES4 - Added in OO features: Type, Inheritance, Introspection, Classes, ~Modules
		Dead on Arrival
	ES5 - HTML5 (current) JS, assumption of JITC JS; IE9, FF4+, Chrome, Safari >=2 , Opera
	ES6 - 
		Modules - Asynchronous Module Definition (RequireJS, CommonJS, Node's "require")
		Classes - "proper" classes
	ES7/ES.Next (JS.Next, (JS2 candidates))
		Google Dart (with DartVM)
		CoffeeScript
		TypeScript 1.x
		AtScript

		Transpiled languages - compiled/translated to JS/ES5
		Traceur - pluggable transpiler
	

Break until 10:50 CEST / 4:50 EST (US)


DOM: Document Object Model
	Tree view of HTML/XML/SGML nodes



Lunch from 12:00 - 1:00 CEST / 6:00am-7:00am US/EST


MVC - Model View Controller
MVVM - Model View ViewModel
MVP - Model View Presenter
MV* - Angular is agnostic


node install
npm install -g http-server
npm install -g yo
npm install -g grunt
npm install -g bower
npm install -g grunt-cli
npm install -g gulp

// http://www.git-scm.com


Quickly consider these APIs (get Wikipedia highlights):
HTML5 APIs

localStorage - key/value storage in-browser, 2.5-5mb
WebDB - SQL in browser
REST - 
Comet / CometBus - for server-side push
Canvas - bitmap drawing API
SVG - Vector drawing API
Audio API - playing, manipulating
Video API - playing
Geolocation - find user's location
IndexDB

Multi-user Quiz app








http://localhost:8080/rest/customers
GET all customers
POST into the collection of all customers
DELETE all customers
PUT update customers

http://localhost:8080/rest/customers/1234 => Harry Potter	
GET Harry
POST Harry's record
DELETE Harry
PUT update Harry

localStorage
Geolocation--
SVG - Vector graphics - replace Flash
Canvas - dashboard 

window.localStorage.getItem("customers")
window.localStorage.setItem("customers", JSON.stringify(array))
window.localStorage.removeItem("customers")
window.localStorage.keys()
window.localStorage.keys().length;
window.localStorage.clear();

window.sessionStorage.getItem("customers")
window.sessionStorage.setItem("customers", JSON.stringify(array))
window.sessionStorage.removeItem("customers")
window.sessionStorage.keys()
window.sessionStorage.keys().length;
window.sessionStorage.clear();

base64 encode/decode
JSON.stringify/JSON.parse

Typescript
	JS
	Classes
	Modules
	Types
TS2 (AtScript)
	Introspection
	Annotation

// POJO => JavaBean
@Entity
@Table(name="CUST")
public class Customer implements Serializable{
	@Id
	@GeneratedType(strategy=IDENTITY)
	private Long customerId = -1;

	private String firstName, lastName, phoneNumber;

	// CTOR

	// getters + setters

	// toString

	// equals + hashCode

}

Typescript:
Types
Encapsulation
Private/Public
Inheritance
Interfaces
Getter/Setters

Later:
Modules
Generics
Mixins (future: Annotations)
=> Arrow functions



Build system:
IDE agnostic
Continuous Integration - Jenkins/Hudson, TeamCity, Rational BuildForge, MS???
CI+TDD
	Unit Tests on Developer machine before check-in
	CI:
		Integrated Build

		Functional:
		Unit Tests (yours + all other developers)
		Progressive Integration testing
			U1+U2 (mock U3+U4), (driver for U1) + U2+U3 + (mock U4), (driver for U1+U2) + U3+U4
			Then U1+U2+U3, U2+U3+U4
		End-To-End (e2e)
			U1+U2+U3+U4
	
		Performance
		Scalability
		HA/FO

		Security


Linting
	HTML => XHTML
	TS/JS
	JSON/XML data
	CSS
Typescript compilation
Concatenation
	JS: all-of-our-files-together.js, all-3rd-party-vendor-supplied.js
	CSS: all-of-our-files-together.css, all-3rd-party-vendor-supplied.css
	Images->Sprites
Minification (not quite obfuscation)
	JS (including transpiled TS) 	//MyApp.min.js, MyApp.min.map, MyApp.js
	CSS => foo.min.css, foo.map.css, foo.css
	Image => PNG => 80% JPG, lossy PNG, flattened PNG
	Font files???
	Audio/Video files
		Also, do we transcode?
Unit Test
Integration/E2E?
Deployment - 1 step deploy to test server, staging server, prod server, etc. (Joel's Tests)



Windows: git command line client (try: http://git-scm.com, say "yes" to the red warning screen")

NodeJS Install (nodejs.org)
npm install -g http-server
npm install -g typescript
npm install -g yo   				//(short for "yeoman", wizard/generator for new project)
npm install -g grunt grunt-cli			// build tool (similar to Makefile, pom.xml, .sln, build.xml)
npm install -g gulp				// build tool (similar to Makefile, pom.xml, .sln, build.xml)
npm install -g bower				// Client-side JS dependencies



yo install a wizard/generator - search for the right one or ones

mkdir a new directory and cd into (you don't know if the wizard will create one for you or dump stuff in the CWD)

yo create a new project (or two, or three, or 100)
	yo mygen:subgen might be available depending on the generator

	yo angular:controller
	yo angular:directive

npm install
bower install


IE8:
	html5shiv - articles, sections, navs, headers, footers support for IE8
	es5shim	- "Monkey Patches" IE8 JavaScript to be (mostly) ES5 compliant
	json3 - safe JSON.parse and JSON.stringify library support for IE8
	css3pie - css3 border radius, drop-shadows, and other CSS3 features to IE8
	respond.js (RWD) - adds CSS Media Query support for Responsive Web Design to IE8
	excanvas - Converts Canvas API calls to MS VML
	jquery 1.x - Supports IE8
	angular <=1.2 - Supports IE8

IE9:
	jquery >= 2
	angular >= 1.3



grunt --tasks 
	-Examines Gruntfile.js and discovers all declared tasks
	"default" is run by undeclared "grunt"
	"grunt build" executes the build task
	"grunt test" executes the test task


Lunch from 12:10 - 1:10



Actors/ User Stories:
	Player
		Login (email as username, password)
		Registration (email, name, username, displayname, hometown, homecountry)  // passport, passport-strategy
		Get Score
		Answer Question
		See Current Question
		See Current Board (categories, point values)
		Select next question
	Quizmaster extends Player
		Send out Current Question
		Select Player to Answer (based on list of who pressed button first)
		Verify correct/incorrect answer (Defer to judges)
	Judge extends Player or Interface/Mixin
		See Current Question
		See the Answer
		Up-Yes/Down-No (consensus carries correct/incorrect answer)
	Question Editor extends Player or Interface/Mixin
		See the list of categories
		See the questions in category
		Add/Edit/Remove category
		Add/Edit/Remove question

		Question:
			Question : string
			Answer : string
			Point Value : number
			Memo/Context : string // other information about the question





Bootstrap
	Best Practices on getting older browsers (<=IE8) to conform to HTML5, CSS3+RWD, JS/ES5, etc.
	CSS Reset - get all browsers to the same starting place.
	Grid System based on 12 columns 12x1, 2x6, 3x4, 4x3, 2x3+1x6
		Instead of using Tables for layout
	Responsive Web Design - screen size, rotation (landscape vs. portrait), pixel density, form factor
	Components/Widgets - navbars, tab, datepicker
	In CSS & JS


"Same bat-time, same bat-channel" - the old 1960s Batman TV show.



$scope, $rootScope (all $vars) are "Dependency Injection"



$rootScope - parent of all controller scopes in the ngApp
$broadcast - send a copy of the event to all child scopes
$emit - send an event from child scope to parent
$on - listen for an event

$watch



Break until 10:35

Lunch until 12:55












































